% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{combine_kernel_density_surfaces}
\alias{combine_kernel_density_surfaces}
\title{Combine density surfaces}
\usage{
combine_kernel_density_surfaces(k, w, npoints = NULL, verbose = FALSE)
}
\arguments{
\item{k}{an object of class \code{estUDm}}

\item{w}{a numeric vector of the same length as the number of kernels in \code{k}.
This is used to weight datasets that have different sampling frequencies.}

\item{npoints}{a vector of the same length as the number of kernels to combine
giving the number of points that that were used to create each kernel.}

\item{verbose}{if TRUE, extra info is output.}
}
\description{
Combine a list of kernel density surfaces into one, using
weighting, in order to give \strong{each kernel surface equal weight} in
the final product.
}
\details{
The intention of this function is to allow the user to combine
several kernel surfaces (NOT UD contours) into a single composite kernel
(which could subsequently be contoured).
This problem typically arises when you have tracked multiple individual
animals and would like to produce a population-wide
kernel surface (and subsequent UD contour). Typically in such situations
it is desired that each animal's track (or some portion of it, say, winter)
contribute equally to the composite.
That is, the animal track is the "sample unit", so to speak with each
animal contributing equally to the whole. The problem
that arises is that each animal track may have different numbers of points.
Blindly throwing the points from all animals into a single kernel analysis
will give more weight to animals whose track contain more points than others.

There are two (non-exclusive) ways in which some animals' tracks may
contain more points than others:

\enumerate{
\item each animal was at liberty for differing periods of time
\item animals used different tracking technology or settings. For
example, some animals carried GLS giving 2 points per day
whereas others carried GPS giving 12 points per day.
}

If you only have the first problem then set \code{w} to all \code{1}'s and
the function will handle the unequal point numbers.

If you also have the second problem, then the \code{w} parameter is designed to
solve this. For example, imagine you have a dataset with 2 GLS tracks and
2 GPS tracks (with a sampling rate of 2 hours) and have created kernels for
each animal in a single \code{estUDm} object with the two GLS kernels first
follwed by the 2 GPS kernels. Since GLS provides 2 positions every day
and the GPS will provide 12 positions every day, then each GLS point is
"worth" 12 GPS points so we would set w = c(12, 12, 1, 1). Note that the function
will still handle the unequal numbers of points per track in this case.

The code assumes that k is of class estUDm (see adehabitatHR) and that each of
the individual estUDs in the estUDm structure are the kernels to be combined.
Normally, in adehabitatHR, estUDm(s) are used to contain the separate kernels
for each animal, but here the elements can be any kernel that we want to
combine.

Note that each kernel in k must have been estimated \strong{on the same grid}. There
are currently \strong{no checks} to ensure this is true.
}
